
# -*- coding: utf-8 -*-
"""assignment 3 simulation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T7G8qnfWLxG9Q8qAYk0gwqZm3f-mAaFf
"""

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import bernoulli
import math
from scipy import stats
num_sim=10000000
data_bagS = bernoulli.rvs(size=num_sim,p=0.333)
ax= sns.distplot(data_bagS,
                 kde=False,
                 color="skyblue",
                 hist_kws={"linewidth":10000,'alpha':1})

ax.set(xlabel='X=0(black ball),X=1(white ball)', ylabel='Frequency')
ax.set(title='(Simulation)Frequency of transfered ball(bag S)')
plt.show()
#transfered ball is black
prob_white1= 5/9
data_bagT_white1 = bernoulli.rvs(size = num_sim,p= prob_white1)
#transfered ball is white
prob_white2= 6/9
data_bagT_white2 = bernoulli.rvs(size = num_sim, p=prob_white2)
#0 represents black
#1 represents white
count_white=0
for i in range(num_sim):
   if data_bagS[i] == 0 and data_bagT_white1[i] == 1 :
     count_white += 1
   elif data_bagS[i] == 1 and data_bagT_white2[i] == 1 :
      count_white += 1
prob_white = count_white/num_sim


print(f'Simulation probability of white drawn={prob_white:.2f}')


#transfered ball is black
prob_black1= 4/9
data_bagT_black1 = bernoulli.rvs(size = num_sim,p= prob_black1)
#transfered ball is white
prob_black2= 3/9
data_bagT_black2 = bernoulli.rvs(size = num_sim, p=prob_black2)
#0 represents black
#1 represents white
count_black=0
for i in range(num_sim):
   if data_bagS[i] == 0 and data_bagT_black1[i] == 1 :
     count_black += 1
   elif data_bagS[i] == 1 and data_bagT_black2[i] == 1 :
      count_black += 1
prob_black = count_black/num_sim


print(f'Simulation probability of black drawn={prob_black:.2f}')

x=['white ball','black ball']
h=[prob_white,prob_black]
plt.bar(x,h)
plt.xlabel("X")
plt.ylabel("Probability")
plt.title("(Simulation)probability of drawn ball(from bag T)")
plt.show()
